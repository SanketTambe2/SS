%{
        #include<stdio.h>
        #include"y.tab.h"
        
%}

%%
and|AND|or|OR|but|BUT {return Connectives;}
[a-zA-Z0-9_]+ {return Word;}
[\.] {return Fullstop;}
%%

/*
lex filen.lex
gcc lex.yy.c y.tab.c
./a.out


lex lflie name.lex
gcc lex.yy.c y.tab.c    =lex and yac both compilation
./a.out

ip= i am sanket.=== Simple Sentence
 
 i am sanket and/or/but am a boy.=====compound sentences.

*/

// 1>
syntax analysis ===>>  in the syntax analysis phase a compiler verifies wheather or not the tokens generated by lexical analyzer are grouped
according to the syntatic rules of the language
2>
syntax analysis is done by parser
3>
the parser obtain a string of tokens from the lexical analyzer and verifies that the grammer for the source language

*> Lex program generates token and accept that generated tokens or context free grammer if will in Statements

**>> function in yacc
1>> YY Parse 
-it is entry point of yacc program
-it is used to demand tokens the program
-

2>> YY error
-YY error is function in the Yacc called when a parsing error is this 
- it is used to print error message take other appropriate action 
 
 3>> Yacc source files has three main sections divide by %%
  1>first section contain defination & declaration used by Yacc & generated code
  2>the Second section contain the grammer of rules and associated semantic actions 
  3>the third section can contain additional c code to be copied directly to output file
  //